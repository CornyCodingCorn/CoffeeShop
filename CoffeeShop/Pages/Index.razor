@page "/"
@using CoffeeShop.Services.Interfaces

@inject INewsService NewsService
@inject INotificationService NoticeService

@using NewsInfo = CoffeeShop.Services.Interfaces.INewsService.Info;

<div class="background">
    <div style="overflow: hidden">
        <div class="title">
            <div class="title-background gradient-background">
                <h1 class="title-text title-item">HARDCORE COFFEE</h1>
                <div class="center-row-div">
                    <img class="title-icon title-item" src="images/cup.png" alt="cup"/>
                </div>
                <h3 class="title-bottom-text title-item">Coffee for giga chads and turns man into giga chad</h3>
            </div>
        </div>
    </div>
    <h1 class="section-label gradient-background">Hot News</h1>
    <div id="news-container" class="info-container">
        @foreach (var info in _queriedNews)
        {
            <NewsElement Info="@info"/>
        }
    </div>
    <div class="center-row-div load-more-div">
        <Button OnClickCallback="@(() => { LoadMoreNews(3); })" Text="Load more"></Button>
    </div>
    <h1 class="section-label gradient-background">Promotions</h1>
    <div id="promotions-container" class="info-container">
        @foreach (var info in _queriedPromotions)
        {
            <NewsElement Info="@info"/>
        }
    </div>
    <div class="center-row-div load-more-div">
        <Button OnClickCallback="@(() => { LoadMorePromotion(3); })" Text="Load more"></Button>
    </div>
</div>

@code {
    private readonly List<NewsInfo> _queriedNews = new();
    private readonly List<NewsInfo> _queriedPromotions = new();
    private int _currentNews = 0;
    private int _currentPromotion = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        LoadMoreNews(2);
        LoadMorePromotion(2);
    }

    private void LoadMoreNews(int length)
    {
        var news = NewsService.GetNews(_currentNews, length);
        if (news.Length == 0)
        {
            NoticeService.Info("Loading info", "There isn't anymore content to load");
        }
        
        _currentNews += news.Length;
        AppendNews(news);
    }

    private void LoadMorePromotion(int length)
    {
        var promotions = NewsService.GetPromotion(_currentPromotion, length);
        if (promotions.Length == 0)
        {
            NoticeService.Warn("Warnninininini", "This is a notice");
        }
        
        _currentPromotion += promotions.Length;
        AppendPromotions(promotions);
    }

    private void AppendNews(IEnumerable<NewsInfo> infos)
    {
        foreach (var info in infos)
        {
            info.Flip = false;
            _queriedNews.Add(info);
        }
    }

    private void AppendPromotions(IEnumerable<NewsInfo> infos)
    {
        
        foreach (var info in infos)
        {
            info.Flip = true;
            _queriedPromotions.Add(info);
        }
    }
}